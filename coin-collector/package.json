{
  "name": "coin-collector",
  "main": "dist/electron/main.js",
  "author": "Eugenio Vinicio Berretta",
  "license": "MIT",
  "version": "1.0.0",
  "scripts": {
    "angular-build": "cd angular-frontend && ng build --base-href ./",
    "angular-prod": "cd angular-frontend && ng build --prod --build-optimizer --base-href ./",
    "electron": "npm run electron-compile && npm run angular-build && npm run electron-serve",
    "electron-compile": "tsc --p electron && npm run electron-splashscreen",
    "electron-splashscreen": "copyfiles electron/**/*.html electron/**/*.css electron/**/*.js dist/",
    "electron-prod": "npm run electron-compile && npm run angular-prod && npm run electron-serve",
    "electron-build": "npm run electron-compile && npm run angular-build",
    "electron-build-prod": "npm run electron-compile && npm run angular-prod",
    "electron-serve": "electron .",
    "electron-icons": "electron-icon-maker --input=resources/src/icon.png --output=./resources",
    "electron-package": "npm run electron-icons && electron-packager . CoinCollector --asar --all --prune --out=../dist/packaged --icon=resources/src/icon/icon.ico --overwrite",
    "electron-package-windows": "npm run electron-icons && electron-packager . CoinCollector --asar --platform=win32 --arch=x64 --prune --out=../dist/packaged --icon=resources/icons/win/icon.ico --overwrite",
    "electron-package-linux": "npm run electron-icons && electron-packager . coin-collector --asar --platform=linux --arch=x64 --prune --out=../dist/packaged --icon=resources/icons/png/64x64.png --overwrite",
    "electron-package-linux": "npm run electron-icons && electron-packager . coin-collector --asar --platform=linux --arch=x64 --prune --out=../dist/packaged --icon=resources/icons/png/64x64.png --overwrite",
    "electron-package-mac": "npm run electron-icons && electron-packager . CoinCollector --asar --platform=darwin --arch=x64 --prune --out=../dist/packaged --icon=resources/icons/mac/icon.icns --overwrite",
    "electron-winstaller-compile": "tsc --p installer/windows",
    "electron-deploy-windows": "npm run electron-winstaller-compile && node dist/installer/windows/build",
    "electron-deploy-linux": "npm run electron-installer-debian --config installer/linux/debian_installer.json",
    "electron-winstaller-compile": "tsc --p installer/windows",
    "electron-deploy-windows": "npm run electron-winstaller-compile && node dist/installer/windows/build",
    "electron-deploy-linux": "npm run electron-installer-debian --config installer/linux/debian_installer.json",
    "electron-deploy-mac": "electron-installer-dmg ./dist/packaged/CoinCollector-darwin-x64 CoinCollector --out=./dist/deployed/mac --overwrite --icon=resources/icons/mac/icon.icns",
    "electron-windows": "npm run electron-compile && npm run electron-build-prod && npm run electron-package-windows && npm run electron-deploy-windows",
    "electron-linux": "npm run electron-compile && npm run electron-build-prod && npm run electron-package-linux && npm run electron-deploy-linux",
    "electron-linux": "npm run electron-compile && npm run electron-build-prod && npm run electron-package-linux && npm run electron-deploy-linux",
    "electron-mac": "npm run electron-compile && npm run electron-build-prod && npm run electron-package-mac && npm run electron-deploy-mac"
  },
  "private": true,
  "devDependencies": {
    "@types/electron-winstaller": "^2.6.2",
    "@types/extract-zip": "^1.6.2",
    "@types/node": "^11.9.3",
    "copyfiles": "^2.1.0",
    "electron": "^4.0.4",
    "electron-icon-maker": "0.0.4",
    "electron-installer-dmg": "^2.0.0",
    "electron-packager": "^13.0.1",
    "electron-packager": "^13.0.1",
    "electron-winstaller": "^2.7.0",
    "jasmine-core": "~2.99.1",
    "jasmine-spec-reporter": "~4.2.1",
    "karma": "~3.1.1",
    "karma-chrome-launcher": "~2.2.0",
    "karma-coverage-istanbul-reporter": "~2.0.1",
    "karma-jasmine": "~1.1.2",
    "karma-jasmine-html-reporter": "^0.2.2",
    "protractor": "~5.4.0",
    "ts-node": "~7.0.0",
    "tslint": "~5.11.0"
    "tslint": "~5.11.0"
  }
}
